@import "./variables.scss";
@import "./utils.scss";

@mixin generate-color($key) {
  $value: map-get($colors, $key);
  $base: map-get($value, base);
  $contrast: map-get($value, contrast);
  $shade: get-color-shade($base);
  $tint: get-color-tint($base);

  #{get-var("color-#{$key}-base")}: #{color-to-rgb-list($base)};
  #{get-var("color-#{$key}-contrast")}: #{color-to-rgb-list($contrast)};
  #{get-var("color-#{$key}-shade")}: #{color-to-rgb-list($shade)};
  #{get-var("color-#{$key}-tint")}: #{color-to-rgb-list($tint)};
}

@mixin generate-color-step($step) {
  $value: mix($text-color, $background-color, $step / 10);
  #{get-var("color-step-#{$step}")}: #{color-to-rgb-list($value)};
}

@mixin generate-color-namespace($key) {
  $value: map-get($colors, $key);
  $base: map-get($value, base);
  $contrast: map-get($value, contrast);
  $shade: get-color-shade($base);
  $tint: get-color-tint($base);

  #{$color-namespace}.#{$key} {
    #{get-var("color-current-base")}: #{color-to-rgb-list($base)};
    #{get-var("color-current-contrast")}: #{color-to-rgb-list($contrast)};
    #{get-var("color-current-shade")}: #{color-to-rgb-list($shade)};
    #{get-var("color-current-tint")}: #{color-to-rgb-list($tint)};
  }
}
